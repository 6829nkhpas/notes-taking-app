version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: notes_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: notes_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - notes_network

  # Backend Server
  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: server-builder
    container_name: notes_server
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 4000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/notes_app?authSource=admin
      CLIENT_ORIGIN: http://localhost:5173
      JWT_SECRET: your_super_secret_jwt_key_at_least_32_chars_long_for_development
      JWT_EXPIRES_IN: 7d
      COOKIE_SECURE: false
      EMAIL_FROM: "Notes App <no-reply@notesapp.dev>"
      GOOGLE_CLIENT_ID: your_google_client_id.apps.googleusercontent.com
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
    networks:
      - notes_network
    volumes:
      - ./server:/app
      - /app/node_modules

  # Frontend Client (Development)
  client:
    build:
      context: .
      dockerfile: Dockerfile
      target: client-builder
    container_name: notes_client
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:4000/api
      VITE_GOOGLE_CLIENT_ID: your_google_client_id.apps.googleusercontent.com
    ports:
      - "5173:5173"
    depends_on:
      - server
    networks:
      - notes_network
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0

volumes:
  mongodb_data:

networks:
  notes_network:
    driver: bridge
